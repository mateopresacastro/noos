generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  clerkId     String        @unique
  email       String        @unique
  userName    String        @unique
  imgUrl      String
  stripeId    String?
  name        String?
  storageUsed BigInt        @default(0)
  samplePacks SamplePack[]
  createdAt   DateTime      @default(now())
  Transaction Transaction[]
}

model SamplePack {
  id                Int           @id @default(autoincrement())
  title             String
  imgUrl            String
  name              String
  stripePaymentLink String        @default("")
  stripeProductId   String        @unique
  url               String
  description       String?
  price             Float         @default(0.0)
  samples           Sample[]
  creator           User          @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  creatorId         Int
  createdAt         DateTime      @default(now())
  totalSize         BigInt        @default(0)
  timesSold         Int           @default(0)
  Transaction       Transaction[]

  @@unique([creatorId, name])
}

model Sample {
  id           Int        @id @default(autoincrement())
  title        String
  url          String
  samplePack   SamplePack @relation(fields: [samplePackId], references: [id], onDelete: Cascade)
  samplePackId Int
  duration     Int        @default(0)
  order        Int        @default(0)
  createdAt    DateTime   @default(now())
}

model Transaction {
  id           Int        @id @default(autoincrement())
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
  samplePack   SamplePack @relation(fields: [samplePackId], references: [id])
  samplePackId Int
  amount       Float
  createdAt    DateTime   @default(now())
}

model InterestedUser {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  createdAt DateTime @default(now())
}
